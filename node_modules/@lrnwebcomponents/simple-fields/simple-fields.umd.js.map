{"version":3,"file":"simple-fields.umd.js","sources":["simple-fields.umd.js"],"sourcesContent":["/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { HAXWiring } from \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport { MutableData } from \"@polymer/polymer/lib/mixins/mutable-data.js\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-input/paper-textarea.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@lrnwebcomponents/eco-json-schema-form/eco-json-schema-form.js\";\nimport \"@lrnwebcomponents/eco-json-schema-form/lib/eco-json-schema-object.js\";\nimport \"@lrnwebcomponents/code-editor/code-editor.js\";\nimport \"@lrnwebcomponents/simple-picker/simple-picker.js\";\nimport \"@lrnwebcomponents/simple-icon-picker/simple-icon-picker.js\";\nimport \"@lrnwebcomponents/simple-colors/lib/simple-colors-picker.js\";\nimport \"@lrnwebcomponents/paper-input-flagged/paper-input-flagged.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\n/**\n * `simple-fields`\n * `Uses eco-json-form and HAX wiring to display a series of fields`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass SimpleFields extends MutableData(PolymerElement) {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n  background-color: #ffffff;\n  overflow: hidden;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\neco-json-schema-object {\n  width: 50%;\n}\neco-json-schema-object {\n  color: var(--hax-text-color);\n  --eco-json-form-color: var(--hax-text-color);\n  --eco-json-schema-object-form : {\n    -ms-flex: unset;\n    -webkit-flex: unset;\n    flex: unset;\n    -webkit-flex-basis: unset;\n    flex-basis: unset;\n  }\n}\neco-json-schema-object .hax-code-editor {\n  padding: 0;\n}</style>\n<eco-json-schema-object\n  id=\"schemaobject\"\n  autofocus$=\"[[autofocus]]\"\n  hide-line-numbers$=\"[[hideLineNumbers]]\"\n  on-form-changed=\"_formChanged\"\n  schema=\"[[__validatedSchema]]\"\n  value=\"{{value}}\"\n></eco-json-schema-object>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return ;\n  }\n  // properties available to the custom element for data binding\n    static get properties() {\n    let props = {\n  /**\n   * automatically set focus on the first field if that field has autofocus\n   */\n  \"autofocus\": {\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * hide code-editor line numbers\n   */\n  \"hideLineNumbers\": {\n    \"type\": Boolean,\n    \"value\": false\n  },\n  /**\n   * Fields to conver toJSON Schema.\n   */\n  \"fields\": {\n    \"type\": Array,\n    \"value\": [],\n    \"observer\": \"_fieldsChanged\"\n  },\n  /**\n   * Returned value from the form input.\n   */\n  \"value\": {\n    \"type\": Object,\n    \"notify\": true,\n    \"value\": {},\n    \"observer\": \"_valueChanged\"\n  },\n  /**\n   * Fields to conver to JSON Schema.\n   */\n  \"__validatedSchema\": {\n    \"type\": Array,\n    \"value\": {\n      \"properties\": {}\n    }\n  }\n}\n;\n    if (super.properties) {\n      props = Object.assign(props, super.properties);\n    }\n    return props;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"simple-fields\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.HAXWiring = new HAXWiring();\n    this.HAXWiring.setup(SimpleFields.haxProperties, SimpleFields.tag, this);\n  }\n  /**\n   * when form changes, sets focus on the first field if this has auto-focus\n   */\n  _formChanged(e) {\n    this.dispatchEvent(\n      new CustomEvent(\"fields-changed\", {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail: e.detail\n      })\n    );\n  }\n  /**\n   * fires when either the eco-json-schema-object or the simple-fields object changes the value\n   * @param {object} oldValue the old value\n   * @param {object} newValue the new value\n   */\n  _valueChanged(oldValue, newValue) {\n    //prevent a feddback loop when the eco-json-schema-object's values change to reflect the changes to simple-fields\n    if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\n      this._setValues();\n    }\n  }\n\n  /**\n   * fires when the fields array changes\n   * @param {object} oldValue the old value\n   * @param {object} newValue the new value\n   */\n  _fieldsChanged(oldValue, newValue) {\n    //prevent a potential feedback loop\n    if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\n      this._setValues();\n    }\n  }\n  /**\n   * when either the fields or the value changes, updates the schema and form to match\n   */\n  _setValues() {\n    let wiring = window.HAXWiring,\n      schema = wiring._getHaxJSONSchemaProperty(this.fields, wiring);\n    for (let prop in this.value) {\n      if (schema[prop]) schema[prop].value = this.value[prop];\n    }\n    //form won't refresh unless we set it to null. notifyPath wasn't enough to refresh it\n    this.__validatedSchema = null;\n    this.__validatedSchema = { properties: schema };\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  //disconnectedCallback() {}\n}\nwindow.customElements.define(SimpleFields.tag, SimpleFields);\nexport { SimpleFields };\n"],"names":["SimpleFields","MutableData","PolymerElement","html","props","Boolean","Array","Object","assign","HAXWiring","setup","haxProperties","tag","this","e","dispatchEvent","CustomEvent","bubbles","cancelable","composed","detail","oldValue","newValue","JSON","stringify","_setValues","wiring","window","schema","_getHaxJSONSchemaProperty","fields","prop","value","__validatedSchema","properties","customElements","define"],"mappings":"uqHA8BMA,gaAAqBC,cAAYC,gEAI5BC,0FA4CHC,EAAQ,WAID,MACHC,eACC,mBAKQ,MACTA,eACC,UAKD,MACAC,YACC,YACG,wBAKL,MACCC,eACE,QACD,YACG,mCAKO,MACXD,YACC,YACO,yCAMdF,EAAQG,OAAOC,OAAOJ,8BAEjBA,oCAQA,4HAOFK,UAAY,IAAIA,iBAChBA,UAAUC,MAAMV,EAAaW,cAAeX,EAAaY,IAAKC,2CAKxDC,QACNC,cACH,IAAIC,YAAY,iBAAkB,CAChCC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,OAAQN,EAAEM,gDASFC,EAAUC,GAElBC,KAAKC,UAAUH,KAAcE,KAAKC,UAAUF,SACzCG,oDASMJ,EAAUC,GAEnBC,KAAKC,UAAUH,KAAcE,KAAKC,UAAUF,SACzCG,sDAOHC,EAASC,OAAOlB,UAClBmB,EAASF,EAAOG,0BAA0BhB,KAAKiB,OAAQJ,OACpD,IAAIK,KAAQlB,KAAKmB,MAChBJ,EAAOG,KAAOH,EAAOG,GAAMC,MAAQnB,KAAKmB,MAAMD,SAG/CE,kBAAoB,UACpBA,kBAAoB,CAAEC,WAAYN,wCAO3CD,OAAOQ,eAAeC,OAAOpC,EAAaY,IAAKZ"}