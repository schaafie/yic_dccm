{"version":3,"file":"simple-icon-picker.umd.js","sources":["simple-icon-picker.umd.js"],"sourcesContent":["/**\n * Copyright 2019 Penn State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport { afterNextRender } from \"@polymer/polymer/lib/utils/render-status.js\";\nimport { SimplePicker } from \"@lrnwebcomponents/simple-picker/simple-picker.js\";\nimport { IronMeta } from \"@polymer/iron-meta/iron-meta.js\";\n\n/**\n * `simple-icon-picker`\n * `Uses simple-picker to create an icon picker`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass SimpleIconPicker extends SimplePicker {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host(simple-icon-picker) #collapse {\n  width: 300px;\n  height: 300px;\n  max-height: 300px;\n  overflow: auto;\n}\n:host(simple-icon-picker) .row {\n  justify-content: flex-start;\n}\n:host(simple-icon-picker) simple-picker-option {\n  flex: 0 0 auto;\n}\n</style>\n${super.template}`;\n  }\n\n  // properties available to the custom element for data binding\n    static get properties() {\n    let props = {\n  /**\n   * Allow a null option to be selected?\n   */\n  \"allowNull\": {\n    \"name\": \"allowNull\",\n    \"type\": Boolean,\n    \"value\": false,\n    \"observer\": \"_getOptions\"\n  },\n\n  /**\n    * An array of icons by name: ```\n[\n  \"editor:format-paint\",\n  \"content-copy\",\n  \"av:volume-off\"\n  \n]```\n  */\n  \"icons\": {\n    \"name\": \"icons\",\n    \"type\": Array,\n    \"value\": [],\n    \"observer\": \"_getOptions\"\n  },\n\n  /**\n   * The value of the option.\n   */\n  \"value\": {\n    \"name\": \"value\",\n    \"type\": String,\n    \"value\": null,\n    \"reflectToAttribute\": true,\n    \"notify\": true\n  },\n\n  /**\n   * the maximum number of options per row\n   */\n  \"optionsPerRow\": {\n    \"optionSize\": \"optionsPerRow\",\n    \"type\": Number,\n    \"value\": 10,\n    \"observer\": \"_getOptions\"\n  },\n\n  /**\n    * An array of icons by name: ```\n[\n  \"editor:format-paint\",\n  \"content-copy\",\n  \"av:volume-off\"\n  \n]```\n  */\n\n  \"__iconList\": {\n    \"name\": \"__iconList\",\n    \"type\": Array,\n    \"read-only\": true,\n    \"observer\": \"_getOptions\"\n  }\n}\n;\n    if (super.properties) {\n      props = Object.assign(props, super.properties);\n    }\n    return props;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"simple-icon-picker\";\n  }\n  constructor() {\n    super();\n    this.hideOptionLabels = true;\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  ready() {\n    super.ready();\n    afterNextRender(this, function() {\n      const iconSets = new IronMeta({ type: \"iconset\" });\n      if (\n        this.icons.length === 0 &&\n        typeof iconSets !== typeof undefined &&\n        iconSets.list &&\n        iconSets.list.length\n      ) {\n        var iconList = [];\n        iconSets.list.forEach(function(item) {\n          item.getIconNames().forEach(icon => {\n            iconList.push(icon);\n          });\n        });\n        this.__iconList = iconList;\n        this._setSelectedOption();\n      }\n    });\n  }\n\n  /**\n   * gets a list of icons and load them in a format\n   * that the simple-picker can take;\n   * if no icons are provided, loads a list from iron-meta\n   *\n   * @param {array} a list of custom icons for the picker\n   * @param {array} default list of icons for the picker\n   * @param {boolean} allow a null value for the picker\n   *\n   */\n  _getOptions() {\n    let icons =\n        typeof this.icons === \"string\" ? JSON.parse(this.icons) : this.icons,\n      collapse = this.shadowRoot.querySelector(\"#collapse\"),\n      cols = this.optionsPerRow;\n    if (icons.length === 0 && this.__iconList && this.__iconList.length > 0)\n      icons = this.__iconList;\n    let options =\n        this.allowNull === false ? [] : [[{ alt: \"null\", value: null }]],\n      h = this.allowNull === false ? 0 : 1;\n    cols =\n      Math.sqrt(icons.length + h) <= this.optionsPerRow\n        ? Math.ceil(Math.sqrt(icons.length + h))\n        : this.optionsPerRow;\n    for (let i = 0; i < icons.length; i++) {\n      let j = h + i,\n        row = Math.floor(j / cols),\n        col = j - row * cols;\n      if (options[row] === undefined || options[row] === null)\n        options[row] = [];\n      options[row][col] = {\n        alt: icons[i],\n        icon: icons[i],\n        value: icons[i]\n      };\n    }\n    this.set(\"options\", options);\n  }\n  /**\n   * Don't set the selection option until there are options rendered\n   */\n  _setSelectedOption() {\n    if (this.options.length > 1) super._setSelectedOption();\n  }\n}\nwindow.customElements.define(SimpleIconPicker.tag, SimpleIconPicker);\nexport { SimpleIconPicker };\n"],"names":["SimpleIconPicker","hideOptionLabels","SimplePicker","html","props","Boolean","Array","String","Number","Object","assign","afterNextRender","this","iconSets","IronMeta","type","icons","length","_typeof","list","iconList","forEach","item","getIconNames","icon","push","__iconList","_setSelectedOption","JSON","parse","cols","shadowRoot","querySelector","optionsPerRow","options","allowNull","alt","value","h","Math","sqrt","ceil","i","j","row","floor","col","undefined","set","_get","window","customElements","define","tag"],"mappings":"mtEAoBMA,yKAwGGC,kBAAmB,gPAxGGC,gEAIpBC,2EAmBHC,EAAQ,WAID,MACH,iBACAC,eACC,WACG,qBAYL,MACC,aACAC,YACC,YACG,qBAML,MACC,aACAC,aACC,yBACa,UACZ,iBAMK,YACD,qBACNC,aACC,YACG,0BAaA,MACJ,kBACAF,mBACK,WACD,mDAKVF,EAAQK,OAAOC,OAAON,8BAEjBA,oCAQA,sGAWPO,kBAAgBC,KAAM,eACdC,EAAW,IAAIC,WAAS,CAAEC,KAAM,eAEd,IAAtBH,KAAKI,MAAMC,sBACXC,EAAOL,IACPA,EAASM,MACTN,EAASM,KAAKF,OACd,KACIG,EAAW,GACfP,EAASM,KAAKE,QAAQ,SAASC,GAC7BA,EAAKC,eAAeF,QAAQ,SAAAG,GAC1BJ,EAASK,KAAKD,YAGbE,WAAaN,OACbO,kEAgBLX,EACsB,iBAAfJ,KAAKI,MAAqBY,KAAKC,MAAMjB,KAAKI,OAASJ,KAAKI,MAEjEc,GADWlB,KAAKmB,WAAWC,cAAc,aAClCpB,KAAKqB,eACO,IAAjBjB,EAAMC,QAAgBL,KAAKc,YAAcd,KAAKc,WAAWT,OAAS,IACpED,EAAQJ,KAAKc,gBACXQ,GACmB,IAAnBtB,KAAKuB,UAAsB,GAAK,CAAC,CAAC,CAAEC,IAAK,OAAQC,MAAO,QAC1DC,GAAuB,IAAnB1B,KAAKuB,UAAsB,EAAI,EACrCL,EACES,KAAKC,KAAKxB,EAAMC,OAASqB,IAAM1B,KAAKqB,cAChCM,KAAKE,KAAKF,KAAKC,KAAKxB,EAAMC,OAASqB,IACnC1B,KAAKqB,kBACN,IAAIS,EAAI,EAAGA,EAAI1B,EAAMC,OAAQyB,IAAK,KACjCC,EAAIL,EAAII,EACVE,EAAML,KAAKM,MAAMF,EAAIb,GACrBgB,EAAMH,EAAIC,EAAMd,OACGiB,IAAjBb,EAAQU,IAAuC,OAAjBV,EAAQU,KACxCV,EAAQU,GAAO,IACjBV,EAAQU,GAAKE,GAAO,CAClBV,IAAKpB,EAAM0B,GACXlB,KAAMR,EAAM0B,GACZL,MAAOrB,EAAM0B,SAGZM,IAAI,UAAWd,gDAMhBtB,KAAKsB,QAAQjB,OAAS,GAAGgC,gEAGjCC,OAAOC,eAAeC,OAAOpD,EAAiBqD,IAAKrD"}