{"version":3,"file":"simple-colors.umd.js","sources":["simple-colors.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@lrnwebcomponents/simple-colors-shared-styles/lib/simple-colors-styles.js\";\nimport { css as SimpleColorsStyleSheet } from \"@lrnwebcomponents/simple-colors-shared-styles/simple-colors-shared-styles.js\";\n/**\n * `simple-colors`\n * `a shared set of styles for @lrnwebcomponents`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html demo\n * @demo demo/how.html getting started\n * @demo demo/colors.html all of the colors\n * @demo demo/picker.html simple-colors-picker\n * @demo demo/extending.html extending simple-colors\n */\nclass SimpleColors extends PolymerElement {\n  // render function\n  static get template() {\n    return html`\n      <style include=\"simple-colors-shared-styles\"></style>\n      <slot></slot>\n    `;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      /**\n       * a selected accent-color: grey, red, pink, purple, etc.\n       */\n      accentColor: {\n        name: \"accentColor\",\n        type: String,\n        value: \"grey\",\n        reflectToAttribute: true,\n        notify: true\n      },\n      /**\n       * make the default theme dark?\n       */\n      dark: {\n        name: \"dark\",\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        notify: true\n      },\n      /**\n       * make the default theme dark?\n       */\n      colors: {\n        name: \"colors\",\n        type: Object,\n        value: window.SimpleColorsStyles.colors,\n        notify: true\n      }\n    };\n  }\n\n  static get tag() {\n    return \"simple-colors\";\n  }\n\n  constructor() {\n    super();\n    this.__utils = window.SimpleColorsStyles.requestAvailability();\n    this.__styles = window.SimpleColorsStyles.stylesheet;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // ensure this only gets applied once even though shouldn't be possible\n    if (!window.SimpleColorsStylesHead) {\n      window.SimpleColorsStylesHead = true;\n      document.head.appendChild(SimpleColorsStyleSheet.content);\n    }\n  }\n\n  /**\n   * gets the current shade\n   *\n   * @param {string} the shade\n   * @param {number} the inverted shade\n   */\n  invertShade(shade) {\n    return this.__utils.invertShade(shade);\n  }\n\n  /**\n   * gets the color information of a given CSS variable or class\n   *\n   * @param {string} the CSS variable (eg. `--simple-colors-fixed-theme-red-3`) or a class (eg. `.simple-colors-fixed-theme-red-3-text`)\n   * @param {object} an object that includes the theme, color, and shade information\n   */\n  getColorInfo(colorName) {\n    return this.__utils.getColorInfo(colorName);\n  }\n\n  /**\n   * returns a variable based on color name, shade, and fixed theme\n   *\n   * @param {string} the color name\n   * @param {number} the color shade\n   * @param {boolean} the color shade\n   * @returns {string} the CSS Variable\n   */\n  makeVariable(color = \"grey\", shade = 1, theme = \"default\") {\n    return this.__utils.makeVariable(\n      (color = \"grey\"),\n      (shade = 1),\n      (theme = \"default\")\n    );\n  }\n\n  /**\n   * for large or small text given a color and its shade,\n   * lists all the colors and shades that would be\n   * WCAG 2.0 AA-compliant for contrast\n   *\n   * @param {boolean} large text? >= 18pt || (bold && >= 14pt)\n   * @param {string} color name, e.g. \"deep-purple\"\n   * @param {string} color shade, e.g. 3\n   * @param {object} all of the WCAG 2.0 AA-compliant colors and shades\n   */\n  getContrastingColors(colorName, colorShade, isLarge) {\n    return this.__utils.getContrastingColors(colorName, colorShade, isLarge);\n  }\n\n  /**\n   * for large or small text given a color and its shade,\n   * lists all the shades of another color that would be\n   * WCAG 2.0 AA-compliant for contrast\n   *\n   * @param {boolean} large text? >= 18pt || (bold && >= 14pt)\n   * @param {string} color name, e.g. \"deep-purple\"\n   * @param {string} color shade, e.g. 3\n   * @param {string} contrasting color name, e.g. \"grey\"\n   * @param {array} all of the WCAG 2.0 AA-compliant shades of the contrasting color\n   */\n  getContrastingShades(isLarge, colorName, colorShade, contrastName) {\n    return this.__utils.getContrastingShades(\n      isLarge,\n      colorName,\n      colorShade,\n      contrastName\n    );\n  }\n\n  /**\n   * determines if two shades are WCAG 2.0 AA-compliant for contrast\n   *\n   * @param {boolean} large text? >= 18pt || (bold && >= 14pt)\n   * @param {string} color name, e.g. \"deep-purple\"\n   * @param {string} color shade, e.g. 3\n   * @param {string} contrasting color name, e.g. \"grey\"\n   * @param {string} contrast shade, e.g. 12\n   * @param {boolean} whether or not the contrasting shade is WCAG 2.0 AA-compliant\n   */\n  isContrastCompliant(\n    isLarge,\n    colorName,\n    colorShade,\n    contrastName,\n    contrastShade\n  ) {\n    return this.__utils.isContrastCompliant(\n      isLarge,\n      colorName,\n      colorShade,\n      contrastName,\n      contrastShade\n    );\n  }\n}\nwindow.customElements.define(SimpleColors.tag, SimpleColors);\nexport { SimpleColors };\n"],"names":["SimpleColors","__utils","window","SimpleColorsStyles","requestAvailability","__styles","stylesheet","PolymerElement","html","accentColor","name","type","String","value","reflectToAttribute","notify","dark","Boolean","colors","Object","SimpleColorsStylesHead","document","head","appendChild","SimpleColorsStyleSheet","content","shade","this","invertShade","colorName","getColorInfo","makeVariable","colorShade","isLarge","getContrastingColors","contrastName","getContrastingShades","contrastShade","isContrastCompliant","customElements","define","tag"],"mappings":"+zDAsBMA,yKAkDGC,QAAUC,OAAOC,mBAAmBC,wBACpCC,SAAWH,OAAOC,mBAAmBG,yPAnDnBC,kEAGhBC,qDAQA,CAILC,YAAa,CACXC,KAAM,cACNC,KAAMC,OACNC,MAAO,OACPC,oBAAoB,EACpBC,QAAQ,GAKVC,KAAM,CACJN,KAAM,OACNC,KAAMM,QACNJ,OAAO,EACPC,oBAAoB,EACpBC,QAAQ,GAKVG,OAAQ,CACNR,KAAM,SACNC,KAAMQ,OACNN,MAAOX,OAAOC,mBAAmBe,OACjCH,QAAQ,sCAML,yHAYFb,OAAOkB,yBACVlB,OAAOkB,wBAAyB,EAChCC,SAASC,KAAKC,YAAYC,MAAuBC,8CAUzCC,UACHC,KAAK1B,QAAQ2B,YAAYF,wCASrBG,UACJF,KAAK1B,QAAQ6B,aAAaD,yNAY1BF,KAAK1B,QAAQ8B,aACT,OACA,EACA,wDAcQF,EAAWG,EAAYC,UACnCN,KAAK1B,QAAQiC,qBAAqBL,EAAWG,EAAYC,gDAc7CA,EAASJ,EAAWG,EAAYG,UAC5CR,KAAK1B,QAAQmC,qBAClBH,EACAJ,EACAG,EACAG,+CAeFF,EACAJ,EACAG,EACAG,EACAE,UAEOV,KAAK1B,QAAQqC,oBAClBL,EACAJ,EACAG,EACAG,EACAE,YAINnC,OAAOqC,eAAeC,OAAOxC,EAAayC,IAAKzC"}